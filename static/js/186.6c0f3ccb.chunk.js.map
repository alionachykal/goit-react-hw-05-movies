{"version":3,"file":"static/js/186.6c0f3ccb.chunk.js","mappings":"+NA0CA,UAtCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAECC,EAAAA,EAAAA,IAAmBT,GAFpB,OAEXU,EAFW,OAGjBC,QAAQC,IAAIF,GACZN,EAAWM,GAJM,gDAMjBJ,EAAS,EAAD,IANS,yDAAH,qDASlBE,GACD,GAAE,CAACR,KAGF,gCACGK,IAAS,yBAAMA,KAChB,wBACGF,EAAQU,KAAI,SAAAC,GAEX,OACE,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GAKnB,QAKR,C,4MCtCDC,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCACVC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGHC,EAAS,mCAAG,yGAAOC,EAAP,+BAAc,EAAd,SACLJ,IAAAA,IAAA,UACbE,EADa,oBACkBD,EADlB,iBACkCG,EADlC,wCADK,cACjBZ,EADiB,yBAKhBA,EAAIa,KAAKC,SALO,2CAAH,qDASTC,EAAY,mCAAG,WAAOC,GAAP,4FAAcJ,EAAd,+BAAqB,EAArB,SACRJ,IAAAA,IAAA,UACbE,EADa,oBACqBD,EADrB,iBACqCG,EADrC,kBACmDI,EADnD,wCADQ,cACpBhB,EADoB,yBAKnBA,EAAIa,KAAKC,SALU,2CAAH,sDASZG,EAAkB,mCAAG,WAAMV,GAAN,uFACdC,IAAAA,IAAA,UACbE,EADa,YACcH,EADd,oBAC4BE,EAD5B,oBADc,cAC1BT,EAD0B,yBAKzBA,EAAIa,MALqB,2CAAH,sDASlBK,EAAkB,mCAAG,WAAMX,GAAN,uFACdC,IAAAA,IAAA,iBACND,GADM,OACDG,EADC,oBACkCD,EADlC,oBADc,cAC1BT,EAD0B,yBAKzBA,EAAIa,KAAKM,MALgB,2CAAH,sDAUlBpB,EAAkB,mCAAG,WAAOQ,GAAP,4FAAWK,EAAX,+BAAkB,EAAlB,SACdJ,IAAAA,IAAA,iBACND,GADM,OACDG,EADC,oBACkCD,EADlC,gCACiEG,IAFnD,cAC1BZ,EAD0B,yBAKzBA,EAAIa,KAAKC,SALgB,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/MoviesAPI.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesReviews } from 'services/MoviesAPI';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const res = await fetchMoviesReviews(movieId);\n        console.log(res);\n        setReviews(res);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <div>{error}</div>}\n      <ul>\n        {reviews.map(review => {\n     \n          return (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          );\n        })}\n      </ul>\n   \n    </>\n  );\n};\n\nexport default Reviews;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e744dd987f832ad945563dbad49387aa';\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n  // console.log(res.data.results);\n  return res.data.results;\n};\n\n//  https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\nexport const fetchByQuery = async (query, page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\nexport const fetchMoviesDetails = async id => {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\nexport const fetchMoviesCredits = async id => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return res.data.results;\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","error","setError","useEffect","fetchReviews","fetchMoviesReviews","res","console","log","map","review","author","content","id","axios","API_KEY","END_POINTS","getMovies","page","data","results","fetchByQuery","query","fetchMoviesDetails","fetchMoviesCredits","cast"],"sourceRoot":""}